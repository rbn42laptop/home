Wed 15 Jun 2016 12:55:04 PM NZST
好奇怪,reddit上面那个compiz用的滤镜明显改觉比我的大很多,难道他改源码了?

Wed 15 Jun 2016 01:57:35 PM NZST
https://github.com/compiz-reloaded/compiz/commit/523c2ab814422e4d88ba89bcfa01cfc37ff75bd6
我想这是了解compiz blur kernel的关键.
主要的差别是,0.8存放kernel的手法似乎和compton不一样,并不是矩阵形式的,我估计是为gaussian特别设计的一维数组.
似乎找到了,buffer似乎是2048的限制

实际上代码中似乎有很多1024 2048的限制,1024和28**2很接近

麻烦的是,gpu操作方面,感觉其中似乎混杂了一些很像汇编的东西
已知存在的大数字:
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 32, 50, 100, 200, 1000, 1024, 2007, 4096, 8192, 65535, 1000000, 20070830
73以下可以排除嫌疑.
50是我设置的,100是option,200也是我设置的,1000是time,大概是毫秒
1024出现很多,最可疑
2007是年份
4096也很可疑,但是看着像是存放gl程序的字符串
8192似乎是window property
65535以上似乎就太大了,应该是无关的的.
因此,重点排查应该是1024了.
的那是很多1024似乎都是char类型,估计是字符串
检查过后觉得,1024的确只是字符串,而且也不涉及循环,是定长字符串
但是,4096倒是挺可疑的,因为其中涉及了循环了.
循环次数是numTexop,numTexop被bs->amp引用了找不到numTexop的赋值.
amp的大小是  BLUR_GAUSSIAN_RADIUS_MAX
所以感觉这里是存在关联性的.那么我们就试下吧

哈哈，一次到位，果然是这里的数组溢出了.

Wed 15 Jun 2016 04:04:27 PM NZST
进一步的问题，提升radius现在不会导致compiz崩溃了,
但是,如果我们设定str为0.1,那么radius到30以后,似乎就没有进一步的效果了.
如果str为0,那么极限是i,
如果str为0.01,效果似乎和0一样,有奇怪的小数点溢出问题.
因为似乎用了一个pascal的整数算法,我想的确是哪里的小数位数溢出了.
到头来,极限效果依然和15/0.1比没有差别

Wed 15 Jun 2016 04:13:06 PM NZST
进一步的源码分析,我们可疑假设下,amp变量就是kernal,那么我们可疑改动amp,来确认下,
改动amp为中心为1,其余为0,那么就是普通的transparent了.
模仿过后,我们知道,当str为0的时候,其实不是guassian效果,kernel恒为1.0

我怀疑,ccsm无法传递太小的数字到程序,那么我们不如在blur.c中设定strength为1/100,然后在ccsm中可疑用更高精度调整strength

Wed 15 Jun 2016 04:58:23 PM NZST
寻找radius极限的办法很简单,设定strength为0,radius在10,和希望的数值之间切换,会产生差异效果.
极限是50,50以上切换依旧是10的效果.compiz没有崩溃,大概和之前的崩溃不同,不涉及cpu溢出,
我想崩溃的是gpu编译,编译失败,所以没有生成新的效果,
因此确认了上限是50,

对应的,strength的下限是0.05,否则会觉得blur效果似乎变方了.

总得来说勉强比初始的15/0.1效果好一些

和compton不同的是,虽然radius设到了50,但是没有感觉到性能下降

Wed 15 Jun 2016 06:15:50 PM NZST
确认是用的是ARB assembly language
也就是汇编咯

Wed 15 Jun 2016 06:25:50 PM NZST
尝试输出汇编后发现，radius超过50的时候，似乎在得到汇编之前，就产生错误了

Wed 15 Jun 2016 06:33:10 PM NZST
更为奇异的是，如果设定radius为12，然后改到120，12会输出一次arb，120不会，
但是如果更改str，这个时候会输出arb,而且其中的数值就是12,而不是120
就好象120 在哪里被截获了,而内部变量依旧是12
在哪里截获的呢?
原来是我自己之前忘了把那个数值改到200了

这样子就什么都解决了。
比较合适的数值是radius100，在拖动窗口的时候，略微可以感觉到有点迟缓,有点性能吃力,这个程度刚刚好.
比compton性能好很多,compton是达不到这个水平的.应该是因为这个程序优化过了.
对应的strength可疑设定在.03,那么在中位,的数值是0.076(对比正中心),边界是0.003,这样的边界似乎有些多余,我们可以适当缩减边界,减少性能消耗.
其实这里的边界适宜度,应该通过积分来计算,到底有百分之多少被丢弃了.太麻烦了,所以就大概估计下吧.

调整到80/.03,这样边界就是0.012了,这个数值应该差不多了

Wed 15 Jun 2016 06:51:30 PM NZST
一个问题是blur和wall一起用的时候,如果radius到了100,3x3的workspace,那么耳机会有电流声,
80 radius的时候,不论3x3还是5x5,启动wall的一瞬间有电流声音,之后就没有了.
这一点而且和当前桌面开启的程序也毫无关系.
不论把wall中的颜色改成全部实色还是全透明也没有帮助.这中情况下照理blur是不工作的.
不过,反正我们用radius80,所以全部问题到此了解

但是,如果桌面上有blur,开启wall的话,即时80也会有噪音
当然问题根本是这台电脑电源管理有问题.
另外,和reddit对比起来,80 0.03还远不及其效果吧.感觉他的radius可能达到200了,概不会是ps的吧.
不过docky看起来有点接近mac了,估计mac或许radius在150左右.
总觉得reddit那份可能是400,500左右,我看我150的效果还不及他一半

现状是,我们可疑调整到190,性能并无大碍,虽然有耳机噪音

190的效果已经和mac很想像,虽然达不到reddit的程度,但是我想如果我们进一步提升可能就过头了,因为颜色会都混到一起去的.
800会卡到动弹不得。
500是性能极限，开机可能无法加载wallpaper，wall完全不流畅，expo中窗口没有blur
300wall还是不流畅,expo也没有blur
200wall就只是轻微不流畅，expo与其说是没有blur，不如说是blur效果怪异，太黑了.
100似乎就没什么问题了,除了电流声
80在有blur窗口的情况下有电流声
50没有

之前我说错了，电流声不是耳机里的，好像是机箱里的

不考虑电流声音的话,日常可以用150,差不多感觉是mac等级了,80的话就会感觉到有差异,差异就是80能勉强分辨背景细节,mac是几乎模糊掉这些细节的.
要截图像reddit的话,可以上500,接近一个光滑平面.虽然略卡,但是不调用expo和wall的话,其实大问题也没有.

Wed 15 Jun 2016 08:12:39 PM NZST
有一个问题,0.8 的blur是依据alpha决定的,
但是qml的shadow也是属于alpha的,所以这些shadow会产生blur效果,细看会有点怪异.
解决方法很简单,想办法把这部分qml排除就可以了,不过这只前我们要先学会编译qml

整体上来说,我还是喜欢透明的qml而不是blur的,因为qml总是占据很大面积,blur并不好,所以暂且把qml排除blur之外吧.

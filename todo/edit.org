* emacs
2016-07-25 13:21:42 Mon NZST
  想到什么的时候再往这里添加.
主要是罗列各种问题,有些问题可以暂且容忍,
但是由于问题存在,所以有些事情就不能用emacs处理.
在将来如果把更多事务交给emacs处理,或许会在整合性上带来好处.
** 一般操作
** 保存退出
*** 期望
期望是可以和vim一样,按q退出一个buffer,如果没有其他buffer了,就完全退出.
*** 现状 
现在的map是,完全退出emacs,并且不询问是否保存.
*** 分析
由于无法选择退出单一buffer,所以现在不能用emacs处理多文件,
不过处理多文件并不是那么常见,嗯,至少处理单一脚本的时候,就用不到这样的功能.
至于保存询问,一般来说,在vim模式下,改完之后都会顺手按s保存,所以,退出的时候不做询问,勉强不算问题.
** orgmode
*** 熟悉阶段的一些规则.
**** 禁止文本内部复制黏贴
尽量用org的方式来调整文本结构.
毕竟复制粘贴的方式调整文本结构实在是太熟练了,而且可以处理任何问题.
但是显然相比org约束性不够,存在打乱文本结构的问题.
**** 不要打"*"星号
为了熟悉org增加条目,和修改条目级别的方式.
**** 减少vim导航键的使用
尤其是gg和G,还有jk,尽量用org的条目行走方式
*** 看法
**** 横屏编辑 
    org似乎很适合横屏编辑,因为的确需要有足够的屏高,来展示tree.
主要原因应该在于,由于org是tree结构而不是线性结构,所以带来了上下翻滚的可能性
实际上原本做线性编辑的话,之前写下的东西过后可能是不再翻看了,而是完全靠大脑回忆.
所以就没有上下翻阅的必要了.
**** 线形和树形编辑对比
嗯,我不觉的线形编辑是劣于树形编辑的,因为前者把必要的信息维持在了脑中,而后者则更多的依赖外物.
我认为信息维持在脑中有些情形下是很必要的,这会增大思维活跃性,而把自己的思维绑定在一个作为
外物的tree上的时候,活跃性是会减弱的,人是会被约束的.
*** 想要学的功能
**** 切换到星号以外的树结构标记
 之前在youtube看过,确认有这个功能,
 不过即使切换,依旧还是树结构,所以其实对于结构没有影响,
 影响到的仅仅是外观.
 由于在文本结构固定后,什么时候切换都是可以的,所以这个功能以后学也没有问题.
 不过,总觉的有些条目的罗列性质强于另一些,所以多少会想要把这些条目的星号换成数字.
**** 表格
 其实基本的很容易就学会了.主要是似乎没什么用到的场合.
**** 排序
有些条目的序列性不强,所以坐下字符串排序方便查找?
还是说最好我们能加强树的纵深,减小branch宽度.
** 主题
主要是改下背景色,还有制表符,下划线.
这大概必须要进一步的熟悉emacs后才方便做.
** autoformat
格式化,vim的格式化是很局限的.
不过vim的python支持的确很好,整合了pep8,所以至少python的格式化并不是问题.
*** 期望
    期望能够格式化的类型
python有pep8,所以应该肯定能做到的.
c有clang,估计也不是问题,
js,html,css等web文件
应该也和vim一样有专业的外部文件引入可以处理
然后是org,不过至少编辑阶段格式就不会太乱了.
bash,这个不算偏门,但是似乎没有独立工具能格式化bash
qml,这个比较偏门,应该很难指望,不过用到的场合也不多.
** vim特有的功能
*** multicursor
*** motion
基础的motion evil是提供了,但是vim plugin中还有更高级的motion,
虽然我用的也不多,但是有的时候还是很方便的.
*** ctrl p
文件查找这种基本功能,估计emacs应该会提供吧?
*** silversearch
这个同样是外部功能,应该会提供整合吧.
